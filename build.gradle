apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'maven'

version = '1.0'

configurations {
	weblogic
}
	
ext {
        jstlVersion = '1.1.2'
        springVersion = '4.0.0.RELEASE'

}

repositories {
    mavenCentral()
}

dependencies() {
	weblogic files("${System.getenv()['MW_HOME']}/wlserver_12.1/server/lib/wlfullclient.jar")
	
   compile ("org.springframework:spring-orm:$springVersion")
   compile ("org.springframework:spring-aop:$springVersion")
   compile ("org.springframework:spring-webmvc:$springVersion")
   compile ("org.springframework:spring-oxm:$springVersion")
   compile ("org.springframework:spring-context:$springVersion")
   
   compile 'org.slf4j:slf4j-api:1.7.1'
   
   providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
   providedCompile 'javax:javaee-api:6.0'
   runtime  ("javax.servlet:jstl:$jstlVersion")
 
}


task loadConfiguration (group:'Deployment', description:'Load configuration from -Penv=<env>'){	
	def env = project.hasProperty('env') ? project.getProperty('env') : 'local'
	
	def configFile = file("$rootDir/.gradle/config/weblogicBuildConfig.groovy")
	def parsedConfig = new ConfigSlurper(env).parse(configFile.toURL())
 
	allprojects {
		ext{
			config = parsedConfig
		}
	}
}

task deployToWLS (group:'Deployment', description:'Deploy artifacts to a WLS. Req -Penv=<env>') << {
 
	ant.taskdef( name: 'wldeploy',
				classname: 'weblogic.ant.taskdefs.management.WLDeploy',
				classpath: configurations.weblogic.asPath
			)
 
	new File("$buildDir/libs/").eachFile { file ->
 
		// Get the filename minus the extension
		def filename = file.getName().split("\\.")[0]
        
    	ant.wldeploy(action: 'deploy',
				source: file,
				name: filename,
				adminurl: config.wls.adminurl,
				user: config.wls.user,
				password: config.wls.password,
				upload: config.wls.upload,
				targets: config.wls.targets,
				verbose: config.wls.verbose,
				debug: config.wls.debug
		)
	}
}

